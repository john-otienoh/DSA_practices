"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be
1, 2, 3, 5, 8, 13, 21, 34, 55, 89.
By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
"""

def fibonacci_of(n: int) -> int:
    "Generate the Fibonacci sequence"
    if n in {0, 1}:
        return n
    return fibonacci_of(n-1) + fibonacci_of(n-2)

def even_fibonacci_numbers(n: int) -> tuple[int, list, list]:
    "Return sum of even-valued fibonacci terms."
    fibo_numbers = [fibonacci_of(i) for i in range(2, n+2)]
    sequence = [i for i in fibo_numbers if i % 2 == 0]
    return sum(sequence), sequence, fibo_numbers

if '__main__' == __name__:
    num = int(input("Enter number: "))
    s, e, l = even_fibonacci_numbers(num)
    # print(f"The list of all the first {num} terms is {l}.")
    # print(f"The list of all the first {num} even terms is {e}.")
    print(f"The sum of all the even-valued terms for the first {num} terms is {s}.")

